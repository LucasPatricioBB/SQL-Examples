WITH Combinacoes AS (
    SELECT 
        main.Atributo,
        atr.site,
        atr.cidade,
        STUFF((
            SELECT ',' + CAST(Id_Indicador AS VARCHAR)
            FROM [VERTICALROBBYSON].[RBY].[IMPORT_MATRIZ] AS Sub
            WHERE Sub.Atributo = Main.Atributo
                AND Sub.data_inicio BETWEEN '2024-08-01' AND '2024-08-31'
                AND Sub.Atributo LIKE '%nubank%'
                AND Sub.Ganho_G1 > 0
                AND ativo NOT IN (0, 6, 8)
            FOR XML PATH(''), TYPE
        ).value('.', 'NVARCHAR(MAX)'), 1, 1, '') AS Indicadores,
        
        STUFF((
            SELECT ',' + CAST(Ganho_G1 AS VARCHAR)
            FROM [VERTICALROBBYSON].[RBY].[IMPORT_MATRIZ] AS Sub
            WHERE Sub.Atributo = Main.Atributo
                AND Sub.data_inicio BETWEEN '2024-08-01' AND '2024-08-31'
                AND Sub.Atributo LIKE '%nubank%'
                AND Sub.Ganho_G1 > 0
                AND ativo NOT IN (0, 6, 8)
            FOR XML PATH(''), TYPE
        ).value('.', 'NVARCHAR(MAX)'), 1, 1, '') AS ganho

    FROM 
        [VERTICALROBBYSON].[RBY].[IMPORT_MATRIZ] AS Main
    LEFT JOIN 
        [VerticalRobbyson].[dbo].[dim_atributo] AS atr WITH (NOLOCK) 
        ON main.atributo = atr.atributo
    WHERE 
        data_inicio BETWEEN '2024-08-01' AND '2024-08-31'
        AND main.Atributo LIKE '%nubank%'
        AND Ganho_G1 > 0
        AND ativo NOT IN (0, 6, 8)
    GROUP BY 
        main.Atributo, site, cidade
)

-- Aplicando ROW_NUMBER no SELECT final
SELECT 
    ROW_NUMBER() OVER (ORDER BY QTD DESC) AS Indice, -- Numerando as linhas ordenadas pela quantidade
    Indicadores, 
    ganho, 
    QTD
FROM 
    (SELECT DISTINCT 
        Indicadores, 
        ganho, 
        COUNT(atributo) AS QTD
    FROM 
        Combinacoes
    GROUP BY 
        Indicadores, ganho
    ) AS ResultSet
ORDER BY 
    indice;
